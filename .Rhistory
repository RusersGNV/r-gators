library(blogdown)
serve_site()
library(blogdown)
serve_site()
serve_site()
serve_site()
blogdown:::new_post_addin()
serve_site()
library(blogdown)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
head(mtcars)
ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point()
library(ggplot2)
ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point()
expression(paste("x axis ", ring(A)^2))
ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point() +
labs(x = bquote('mpg'^2))
blogdown:::new_post_addin()
install.packages("adehabitatLT")
install.packages("rworldmap")
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library("adehabitatLT")
library("lubridate")
library("raster")
library("rworldmap")
install.packages("rworldmap")
library("adehabitatLT")
library("lubridate")
library("raster")
library("rworldmap")
install.packages("rworldmap")
library(rworldmap)
install.packages("dotCall64")
library(rworldmap)
library("adehabitatLT")
library("lubridate")
library("raster")
library("rworldmap")
library("sp")
locs_demo <- readRDS("locs_demo.rds")
locs_demo <- readRDS("data/locs_demo.rds")
head(locs_demo)
class(locs_demo)
locs_demo <- locs_demo[!is.na(locs_demo$x),]
locs_demo <- locs_demo[!is.na(locs_demo$y),]
coordinates(locs_demo) <- c("x", "y")
class(locs_demo)
proj4string(locs_demo) <- CRS("+init=epsg:32617")
class(locs_demo$acquisition_time)
# locs_demo$acquisition_time <- as.POSIXct(strptime(as.character(locs_demo$acquisition_time), "%y%m%d", tz="EST"))
raw_wost <- as.ltraj(coordinates(locs_demo),date=locs_demo$acquisition_time,id=locs_demo$animal_id, typeII=TRUE)
is.regular(raw_wost)
raw_wost
class(raw_wost)
raw_wost[1]
class(raw_wost[1])
head(raw_wost[[1]])
class(raw_wost[[1]])
refda <- min(locs_demo$acquisition_time)
wost_NA <- setNA(raw_wost,refda,1,units="hour")
wost_demo <- sett0(wost_NA,refda,1,units="hour")
is.regular(wost_demo)
plot.ltraj(wost_demo)
map_gen <- getMap(resolution="high")[-which(getMap()$ADMIN=='Antarctica'),]
# Not excluding Antarctica apparently creates issues
locs_ll <- spTransform(locs_demo, CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
map_ext <- extent(min(locs_ll$longitude),max(locs_ll$longitude),
min(locs_ll$latitude),max(locs_ll$latitude))
bbox <- bbox(map_ext)
bbox <- as.data.frame(t(bbox))
coordinates(bbox) <- ~s1+s2
proj4string(bbox) <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# Assign projection to the bounding box (same as map_gen)
map_crop <- map_gen[bbox,]
map_crop <- spTransform(map_crop, CRS("+init=epsg:32617"))
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
# This is the code I used to select the dataset for this demo. I kept it here just for personal record.
#
# locs_demo <- locs[locs$animal_id %in% c("1134370", "1134400", "851260", "910200", "910220", "910230"),] ## OLD
#
# locs_demo <- locs[locs$animal_id %in% c("1134370") & year(locs$acquisition_time)==2014 |
#                     locs$animal_id %in% c("1134400") & year(locs$acquisition_time)==2013 |
#                     locs$animal_id %in% c("851260") & year(locs$acquisition_time)==2009 |
#                     locs$animal_id %in% c("910200") & year(locs$acquisition_time)==2010 |
#                     locs$animal_id %in% c("910220") & year(locs$acquisition_time)==2012 |
#                     locs$animal_id %in% c("910230") & year(locs$acquisition_time)==2010,]
# saveRDS(locs_demo, "locs_demo.rds")
library("adehabitatLT")
library("lubridate")
library("raster")
library("rworldmap")
library("sp")
locs_demo <- readRDS("data/locs_demo.rds")
head(locs_demo)
class(locs_demo)
locs_demo <- locs_demo[!is.na(locs_demo$x),]
locs_demo <- locs_demo[!is.na(locs_demo$y),]
coordinates(locs_demo) <- c("x", "y")
class(locs_demo)
proj4string(locs_demo) <- CRS("+init=epsg:32617")
class(locs_demo$acquisition_time)
# locs_demo$acquisition_time <- as.POSIXct(strptime(as.character(locs_demo$acquisition_time), "%y%m%d", tz="EST"))
raw_wost <- as.ltraj(coordinates(locs_demo),date=locs_demo$acquisition_time,id=locs_demo$animal_id, typeII=TRUE)
is.regular(raw_wost)
raw_wost
class(raw_wost)
raw_wost[1]
class(raw_wost[1])
head(raw_wost[[1]])
class(raw_wost[[1]])
refda <- min(locs_demo$acquisition_time)
wost_NA <- setNA(raw_wost,refda,1,units="hour")
wost_demo <- sett0(wost_NA,refda,1,units="hour")
is.regular(wost_demo)
plot.ltraj(wost_demo)
map_crop <- map_gen[bbox,]
map_crop <- spTransform(map_crop, CRS("+init=epsg:32617"))
map_gen <- getMap(resolution="high")[-which(getMap()$ADMIN=='Antarctica'),]
locs_ll <- spTransform(locs_demo, CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
map_ext <- extent(min(locs_ll$longitude),max(locs_ll$longitude),
min(locs_ll$latitude),max(locs_ll$latitude))
map_ext
bbox <- bbox(map_ext)
bbox
bbox <- as.data.frame(t(bbox))
coordinates(bbox) <- ~s1+s2
proj4string(bbox) <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
map_crop <- map_gen[bbox,]
map_crop <- spTransform(map_crop, CRS("+init=epsg:32617"))
par(mfrow=c(2,3))
plot.ltraj(wost_demo[1], main=burst(wost_demo[1]), spoldf=map_crop, colspoldf="cornsilk")
wost_demo
head(wost_demo[[1]])
plotltr(wost_demo, which="dist")
wost_df <- ld(wost_demo)
head(wost_df)
wost_demo_bt <- dl(wost_df)
wost_demo_bt
identical(wost_demo, wost_demo_bt)
perind <- split(wost_df, wost_df$id)
# First I split the df into a list of individual data frames
class(perind)
plotNSD <- function(x) {
hist(x$R2n, breaks=15, xlab="NSD", main=paste0("NSD ", unique(x$id), " n=", nrow(x[!is.na(x$R2n),])))
}
par(mfrow=c(2,3))
lapply(perind, plotNSD)
dev.off()
plotRA <- function(x) {
rose.diag(x[!is.na(x$rel.angle),]$rel.angle, bins=24, prop=2, main=paste0("Rel.Angles ", unique(x$id), " n=", nrow(x[!is.na(x$rel.angle),])))
}
par(mfrow=c(2,3))
lapply(perind, plotRA)
dev.off()
wost_fpt1 <- fpt(wost_demo, radii=5:500, units="hours")
varlogfpt(wost_fpt1, graph=TRUE)
meanfpt(wost_fpt1, graph=TRUE)
plot(wost_fpt1, scale=25)
wost_fpt2 <- fpt(wost_demo, radii=seq(1000, 100000, by=1000), units="hours")
varlogfpt(wost_fpt2, graph=TRUE)
fpt_4370 <- fpt(wost_demo[1], radii=seq(1000, 100000, by=1000), units="hours")
varlogfpt(fpt_4370, graph=TRUE)
plot(fpt_4370, scale=45000)
df_4370 <- ld(wost_demo[1])
df_4370 <- df_4370[!is.na(df_4370$x),]
df_4370 <- df_4370[!is.na(df_4370$y),]
df_4370$fpt_r45 <- fpt_4370[[1]]$r45
traj_4370 <- dl(df_4370)
# regularize again
traj_4370 <- setNA(traj_4370,refda,1,units="hour")
traj_4370 <- sett0(traj_4370,refda,1,units="hour")
# To access infolocs:
# infolocs(traj_4370)[[1]]$fpt_r45
lav_4370 <- lavielle(traj_4370, Lmin=10, Kmax=10, type="mean", which="fpt_r45")
chooseseg(lav_4370)
seg_4370 <- findpath(lav_4370, 3)
plot(seg_4370)
par(mfrow=c(1,3))
plot(seg_4370[1],ylim=c(2800000,3700000),xlim=c(300000,700000))
plot(seg_4370[2],ylim=c(2800000,3700000),xlim=c(300000,700000))
plot(seg_4370[3],ylim=c(2800000,3700000),xlim=c(300000,700000))
dev.off()
par(mfrow=c(1,3))
plot(seg_4370[1],ylim=c(2800000,3700000),xlim=c(300000,700000), spoldf=map_crop, colspoldf="cornsilk")
plot(seg_4370[2],ylim=c(2800000,3700000),xlim=c(300000,700000), spoldf=map_crop, colspoldf="cornsilk")
plot(seg_4370[3],ylim=c(2800000,3700000),xlim=c(300000,700000), spoldf=map_crop, colspoldf="cornsilk")
dev.off()
plotltr(traj_4370, which="R2n")
lav_4370 <- lavielle(traj_4370, Lmin=10, Kmax=10, type="mean", which="R2n")
chooseseg(lav_4370)
seg_4370 <- findpath(lav_4370, 3)
plot(seg_4370)
par(mfrow=c(1,3))
plot(seg_4370[1],ylim=c(2800000,3700000),xlim=c(300000,700000))
plot(seg_4370[2],ylim=c(2800000,3700000),xlim=c(300000,700000))
plot(seg_4370[3],ylim=c(2800000,3700000),xlim=c(300000,700000))
dev.off()
par(mfrow=c(1,3))
plot(seg_4370[1],ylim=c(2800000,3700000),xlim=c(300000,700000), spoldf=map_crop, colspoldf="cornsilk")
plot(seg_4370[2],ylim=c(2800000,3700000),xlim=c(300000,700000), spoldf=map_crop, colspoldf="cornsilk")
plot(seg_4370[3],ylim=c(2800000,3700000),xlim=c(300000,700000), spoldf=map_crop, colspoldf="cornsilk")
dev.off()
blogdown::serve_site()
blogdown::serve_site()
map_gen <- getMap(resolution="high")[-which(getMap()$ADMIN=='Antarctica'),]
# Not excluding Antarctica apparently creates issues
locs_ll <- spTransform(locs_demo, CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
map_ext <- extent(min(locs_ll$longitude),max(locs_ll$longitude),
min(locs_ll$latitude),max(locs_ll$latitude))
bbox <- bbox(map_ext)
bbox <- as.data.frame(t(bbox))
coordinates(bbox) <- ~s1+s2
proj4string(bbox) <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# Assign projection to the bounding box (same as map_gen)
map_crop <- map_gen[bbox,]
map_crop <- spTransform(map_crop, CRS("+init=epsg:32617"))
library(rgdal)
map_gen <- getMap(resolution="high")[-which(getMap()$ADMIN=='Antarctica'),]
# Not excluding Antarctica apparently creates issues
locs_ll <- spTransform(locs_demo, CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
map_ext <- extent(min(locs_ll$longitude),max(locs_ll$longitude),
min(locs_ll$latitude),max(locs_ll$latitude))
bbox <- bbox(map_ext)
bbox <- as.data.frame(t(bbox))
coordinates(bbox) <- ~s1+s2
proj4string(bbox) <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# Assign projection to the bounding box (same as map_gen)
map_crop <- map_gen[bbox,]
map_crop <- spTransform(map_crop, CRS("+init=epsg:32617"))
R.Version()
install.packages("blogdown")
blogdown::serve_site()
1+1
blogdown::install_hugo()
blogdown::install_hugo(force=TRUE)
blogdown::serve_site()
blogdown::serve_site()
blogdown::hugo_version()
blogdown::update_hugo()
blogdown::serve_site()
