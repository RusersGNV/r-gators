<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R-Gators</title>
    <link>/index.xml</link>
    <description>Recent content on R-Gators</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Aug 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Introduction to R and RStudio</title>
      <link>/post/2017-08-30-introduction-to-r-and-rstudio/</link>
      <pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017-08-30-introduction-to-r-and-rstudio/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;../data/intro-to-r.pdf&#34;&gt;link to pdf&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&#34;../data/intro-to-r.pdf&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://board.net/p/ufr-2017-08-30&#34;&gt;Etherpad notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.datacarpentry.org/R-ecology-lesson/&#34;&gt;Data Carpentry R lesson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.r-project.org/&#34;&gt;Download R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/#download&#34;&gt;Download RStudio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;why-r&#34;&gt;Why R?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;R doesn&amp;rsquo;t involve pointing and clicking&lt;/li&gt;
&lt;li&gt;Great for reproducibility&lt;/li&gt;
&lt;li&gt;Works for all sorts of data&lt;/li&gt;
&lt;li&gt;Creating awesome graphics&lt;/li&gt;
&lt;li&gt;Interdisplincary with a large community&lt;/li&gt;
&lt;li&gt;Free, open-source, and cross-platform&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rstudio&#34;&gt;RStudio&lt;/h2&gt;

&lt;p&gt;RStudio is a free Integrated Development Environment (IDE) for working with R&lt;/p&gt;

&lt;p&gt;This provides a framework for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Writing code&lt;/li&gt;
&lt;li&gt;Navigating files&lt;/li&gt;
&lt;li&gt;Visualizing packages&lt;/li&gt;
&lt;li&gt;Creating projects&lt;/li&gt;
&lt;li&gt;Many other goodies (version control, making packages, Shiny apps)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rstudio-projects&#34;&gt;RStudio Projects&lt;/h2&gt;

&lt;p&gt;Projects in RStudio create a folder for storing all of our files (data, scripts, images)&lt;/p&gt;

&lt;p&gt;Eliminates the need for setting our working directory with &lt;code&gt;setwd()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It is useful to created individual folders within the project for storing &lt;code&gt;data\&lt;/code&gt;, &lt;code&gt;scripts\&lt;/code&gt;, &lt;code&gt;images\&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;When you want to open your project to a new computer, just copy this entire folder onto the new machine&lt;/p&gt;

&lt;h2 id=&#34;interacting-with-r&#34;&gt;Interacting with R&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Using the console

&lt;ul&gt;
&lt;li&gt;Immediately execute commands&lt;/li&gt;
&lt;li&gt;Console shows &lt;code&gt;&amp;gt;&lt;/code&gt; when ready to accept a command&lt;/li&gt;
&lt;li&gt;Console shows &lt;code&gt;+&lt;/code&gt; when waiting for more information

&lt;ul&gt;
&lt;li&gt;Press &lt;kbd&gt;&lt;code&gt;Esc&lt;/code&gt;&lt;/kbd&gt; to cancel incomplete commands&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Writing scripts

&lt;ul&gt;
&lt;li&gt;Creates a complete record of our process&lt;/li&gt;
&lt;li&gt;Execute commands directly from the script editor by using the &lt;kbd&gt;&lt;code&gt;Ctrl&lt;/code&gt;&lt;/kbd&gt; + &lt;kbd&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;/kbd&gt; (&lt;kbd&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/kbd&gt; + &lt;kbd&gt;&lt;code&gt;Return&lt;/code&gt;&lt;/kbd&gt; on Mac)&lt;/li&gt;
&lt;li&gt;Run the entire script using &lt;kbd&gt;&lt;code&gt;Ctrl&lt;/code&gt;&lt;/kbd&gt; + &lt;kbd&gt;&lt;code&gt;Shift&lt;/code&gt;&lt;/kbd&gt; + &lt;kbd&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;/kbd&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;using-help-files&#34;&gt;Using Help Files&lt;/h2&gt;

&lt;p&gt;Use &lt;code&gt;?&lt;/code&gt; to get the help file for a function&lt;/p&gt;

&lt;p&gt;Use &lt;code&gt;args()&lt;/code&gt; function to get the arguments for a function&lt;/p&gt;

&lt;p&gt;Use &lt;code&gt;??&lt;/code&gt; to search for a term in help files&lt;/p&gt;

&lt;p&gt;Look at the Cheatsheets in the &lt;code&gt;Help&lt;/code&gt; tab in RStudio&lt;/p&gt;

&lt;h2 id=&#34;creating-objects-variables&#34;&gt;Creating objects/variables&lt;/h2&gt;

&lt;p&gt;We can assign &lt;em&gt;values&lt;/em&gt; to &lt;em&gt;objects&lt;/em&gt; using the assignment operator, and use R to do useful things:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;weight_kg &amp;lt;- 55
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may come across code that assigns values using &lt;code&gt;=&lt;/code&gt; instead of &lt;code&gt;&amp;lt;-&lt;/code&gt;, which can have some &lt;a href=&#34;https://web.archive.org/web/20130610005305/https://stat.ethz.ch/pipermail/r-help/2009-March/191462.html&#34;&gt;slight differences&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is good practice to stick with&lt;code&gt;&amp;lt;-&lt;/code&gt; for assigning values&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;2.2 * weight_kg  # Do math with variables

weight_kg &amp;lt;- 57.5  # Save over an variables with new value(s)
2.2 * weight_kg

weight_lb &amp;lt;- 2.2 * weight_kg  # Create new variables with old ones
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;functions-and-arguments&#34;&gt;Functions and arguments&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Functions&lt;/strong&gt; are &amp;ldquo;canned scripts&amp;rdquo; which automate series of commands on one or more inputs called &lt;strong&gt;arguments&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;b &amp;lt;- sqrt(a)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Arguments can be anything (numbers, filenames, variables), &lt;em&gt;options&lt;/em&gt; are arguments that take on default values which can be altered by the user&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;round(3.14159)
args(round)
round(3.14159, digits = 2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is also possible (and very useful) to create your own functions&lt;/p&gt;

&lt;h2 id=&#34;vectors-and-data-types&#34;&gt;Vectors and data types&lt;/h2&gt;

&lt;p&gt;We can save multiple values into a single variable, called a &lt;strong&gt;vector&lt;/strong&gt;, using the &lt;code&gt;c()&lt;/code&gt; function:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;weight_g &amp;lt;- c(50, 60, 65, 82)
weight_g
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vectors can also contain characters:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;animals &amp;lt;- c(&amp;quot;mouse&amp;quot;, &amp;quot;rat&amp;quot;, &amp;quot;dog&amp;quot;)
animals
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some useful functions:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;length(weight_g)  # Counts the number of elements in the vector
class(weight_g)   # Identifies the type of elements 
str(weight_g)     # Display structure of object
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;datatypes-in-r&#34;&gt;Datatypes in R&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Class&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;numeric&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Numbers, including decimals&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;character&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Strings (text)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;logical&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TRUE/FALSE (Boolean)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;integer&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Integer values&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;factor&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Categorial variables (including strings)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;subsetting-vectors&#34;&gt;Subsetting vectors&lt;/h2&gt;

&lt;p&gt;Subsetting vectors is done using square brackets:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;animals &amp;lt;- c(&amp;quot;mouse&amp;quot;, &amp;quot;rat&amp;quot;, &amp;quot;dog&amp;quot;, &amp;quot;cat&amp;quot;)
animals[2]
animals[c(3, 2)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Conditional subsetting can be done using &lt;code&gt;TRUE/FALSE&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;weight_g &amp;lt;- c(21, 34, 39, 54, 55)
weight_g[c(TRUE, FALSE, TRUE, TRUE, FALSE)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can combine logical operators, like &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;, with &lt;code&gt;TRUE/FALSE&lt;/code&gt; to subset only &lt;code&gt;TRUE&lt;/code&gt; values:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;weight_g &amp;gt; 50            # Returns vector of TRUE/FALSE
weight_g[weight_g &amp;gt; 50]   # Returns vector of only TRUE elements
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;multiple-subsets-using-and-and-or&#34;&gt;Multiple subsets using AND and OR&lt;/h2&gt;

&lt;p&gt;We can subset on multiple conditions using &lt;code&gt;&amp;amp;&lt;/code&gt; for AND conditions (ie both are TRUE), and &lt;code&gt;|&lt;/code&gt; for OR conditions (ie either are TRUE):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;weight_g[weight_g &amp;lt; 30 | weight_g &amp;gt; 50]
weight_g[weight_g &amp;gt;= 30 &amp;amp; weight_g == 21]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that we use &lt;code&gt;==&lt;/code&gt; when subsetting instead of &lt;code&gt;=&lt;/code&gt;, which is an assigning operator&lt;/p&gt;

&lt;p&gt;&lt;code&gt;a = 4&lt;/code&gt; can be read as 4 &lt;em&gt;goes into&lt;/em&gt; a&lt;/p&gt;

&lt;p&gt;&lt;code&gt;a == 4&lt;/code&gt; can be read as a &lt;em&gt;is equal to&lt;/em&gt; 4&lt;/p&gt;

&lt;h2 id=&#34;searching-for-elements&#34;&gt;Searching for elements&lt;/h2&gt;

&lt;p&gt;One common task is searching for certain values or string:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;animals &amp;lt;- c(&amp;quot;bear&amp;quot;, &amp;quot;tiger&amp;quot;, &amp;quot;dog&amp;quot;, &amp;quot;cat&amp;quot;, &amp;quot;lion&amp;quot;) 
# Find pets
animals[animals == &amp;quot;dog&amp;quot; | animals == &amp;quot;cat&amp;quot; | animals == &amp;quot;mouse&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using &lt;code&gt;|&lt;/code&gt; can get tedious, instead use &lt;code&gt;%in%&lt;/code&gt; to test if any elements in a search vector are present&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pets &amp;lt;- c(&amp;quot;dog&amp;quot;, &amp;quot;cat&amp;quot;, &amp;quot;mouse&amp;quot;)
pets %in% animals
pets[pets %in% animals]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;reading-csv-datafiles-into-r&#34;&gt;Reading CSV datafiles into R&lt;/h2&gt;

&lt;p&gt;We often store our data in comma seperated value (CSV) files, which can be read into R using the &lt;code&gt;read.csv()&lt;/code&gt; function:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Download example .csv file
download.file(&amp;quot;https://ndownloader.figshare.com/files/2292169&amp;quot;,
              &amp;quot;data/portal_data_joined.csv&amp;quot;)

# Save into variable 
surveys &amp;lt;- read.csv(&#39;data/portal_data_joined.csv&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: this code requires having a &lt;code&gt;data/&lt;/code&gt; folder in your project&lt;/p&gt;

&lt;h2 id=&#34;functions-for-characterizing-dataframe&#34;&gt;Functions for characterizing dataframe&lt;/h2&gt;

&lt;p&gt;We can run the name of the variable to view the dataframe, but often there will be too much information to display in the console&lt;/p&gt;

&lt;p&gt;Here are some useful functions for characterizing a dataframe:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(surveys)     # Top of dataframe
tail(surveys)     # Bottom of dataframe
dim(surveys)      # Dimensions
ncol(surveys)     # Number of columns
nrow(surveys)     # Number of rows
names(surveys)    # Column names
rownames(surveys) # Row names
str(surveys)      # Structure, with class, length, and content
summary(surveys)  # Summary statistics for each columns
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;indexing-and-subsetting-dataframes&#34;&gt;Indexing and subsetting dataframes&lt;/h2&gt;

&lt;p&gt;Dataframes are also subsetted or &lt;em&gt;indexed&lt;/em&gt; with square brackets, expect we must specify rows then columns&lt;code&gt;[row,column]&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;surveys[1, 1]   # first element in the first column of the data frame (as a vector)
surveys[1, 6]   # first element in the 6th column (as a vector)
surveys[, 1]    # first column in the data frame (as a vector)
surveys[1]      # first column in the data frame (as a data.frame)
surveys[1:3, 7] # first three elements in the 7th column (as a vector)
surveys[3, ]    # the 3rd element for all columns (as a data.frame)
head_surveys &amp;lt;- surveys[1:6, ] # equivalent to head(surveys)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use the &lt;code&gt;-&lt;/code&gt; sign to exclude certain sections:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;surveys[,-1]          # The whole data frame, except the first column
surveys[-c(7:34786),] # Equivalent to head(surveys)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;subsetting-columns-by-name&#34;&gt;Subsetting columns by name&lt;/h2&gt;

&lt;p&gt;Columns can be selected by name using the these operators:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;surveys[&amp;quot;species_id&amp;quot;]       # Result is a data.frame
surveys[, &amp;quot;species_id&amp;quot;]     # Result is a vector
surveys[[&amp;quot;species_id&amp;quot;]]     # Result is a vector
surveys$species_id          # Result is a vector
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;factors&#34;&gt;Factors&lt;/h2&gt;

&lt;p&gt;Factors are used for storing categorical data, which are separated into &lt;strong&gt;levels&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sex &amp;lt;- factor(c(&amp;quot;male&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;male&amp;quot;))
levels(sex)
nlevels(sex)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can rename the levels in a factor, either individually or all at once:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;levels(sex)[1] &amp;lt;- &amp;quot;F&amp;quot;       # Change the first element
levels(sex) &amp;lt;- c(&amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;)  # Change all factors
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, we may want to convert factors to &lt;code&gt;char&lt;/code&gt; or &lt;code&gt;numeric&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;as.character(sex)
f &amp;lt;- factor(c(1990, 1983, 1977, 1998, 1990))
as.numeric(levels(f))[f] # We want to use the levels in this case
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;exercises&#34;&gt;Exercises&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;What type of vectors are each of the columns in the &lt;code&gt;surveys&lt;/code&gt; dataframe?&lt;/li&gt;
&lt;li&gt;How many &lt;em&gt;Neotoma albigula&lt;/em&gt; were collected in 1990?&lt;/li&gt;
&lt;li&gt;Create a new dataframe that only contains records these &lt;code&gt;species_id&lt;/code&gt;: RM, OL, and PP.&lt;/li&gt;
&lt;li&gt;With this new dataframe, use the &lt;code&gt;plot()&lt;/code&gt; function to display the number of each &lt;code&gt;sex&lt;/code&gt;. Be sure all levels are correctly labelled.&lt;/li&gt;
&lt;li&gt;Create a similar plot for the number of specimens caught in each year.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Speeding up R code using Rcpp and foreach packages</title>
      <link>/post/speeding-up-r-code-using-rcpp-and-foreach-packages/</link>
      <pubDate>Wed, 08 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/speeding-up-r-code-using-rcpp-and-foreach-packages/</guid>
      <description>&lt;p&gt;Download a pdf of Dr. Albuquerque&amp;rsquo;s presentation &lt;a href=&#34;../data/speeding-r-code.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;iframe src=&#34;../data/speeding-r-code.pdf&#34; width=&#34;100%&#34; height=&#34;700px&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Upcoming Meeting Presentation: Rcpp and foreach</title>
      <link>/post/upcoming-meeting-presentation-rcpp-and-foreach/</link>
      <pubDate>Thu, 02 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/upcoming-meeting-presentation-rcpp-and-foreach/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s the details for this week&amp;rsquo;s R meetup session:&lt;/p&gt;

&lt;p&gt;Presentation: &amp;ldquo;Speeding up R code using Rcpp and foreach packages&amp;rdquo; by Dr Pedro Albuquerque
Time: 4 to 6pm
Date: Feb 8 (Wednesday)
Venue: Marston Science Library Room L136&lt;/p&gt;

&lt;p&gt;We think this week&amp;rsquo;s presentation topic will be very useful for those of us who have (or planning to write) R codes take up lots of computing power and time. By leveraging on C++, via Rcpp, and package such as foreach, it is possible to get your job done faster! And of course it&amp;rsquo;s always interesting to take note on what R and its package can help you with, even if you don&amp;rsquo;t have such problem currently.&lt;/p&gt;

&lt;p&gt;As usual, you&amp;rsquo;ll get to interact, help and get help from other R users after the presentation. Drinks will be provided, so please bring your computer, questions, and expertise! And please do not hesitate to contact me (kokbent@ufl.edu&lt;a href=&#34;mailto:kokbent@ufl.edu&#34;&gt;kokbent@ufl.edu&lt;/a&gt;) or Justin (jjmillar@ufl.edu&lt;a href=&#34;mailto:jjmillar@ufl.edu&#34;&gt;jjmillar@ufl.edu&lt;/a&gt;) if you have any enquiry or feedback&lt;/p&gt;

&lt;p&gt;If you have friends and colleagues who wish to join the UF R users mailing list, fill in the form here&lt;a href=&#34;http://tinyurl.com/UFRUser&#34;&gt;http://tinyurl.com/UFRUser&lt;/a&gt; (&lt;a href=&#34;http://tinyurl.com/UFRUser&#34;&gt;http://tinyurl.com/UFRUser&lt;/a&gt;) or email us.&lt;/p&gt;

&lt;p&gt;Also, please feel free to ask your R questions via this mailing list&lt;/p&gt;

&lt;p&gt;See you on Wednesday!
Ben&lt;/p&gt;

&lt;p&gt;This list strives to be beginner friendly.  However, we still ask that you
PLEASE do read the posting guide &lt;a href=&#34;http://www.R-project.org/posting-guide.html&#34;&gt;http://www.R-project.org/posting-guide.html&lt;/a&gt;
and provide commented, minimal, self-contained, reproducible code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contributors</title>
      <link>/contributors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/contributors/</guid>
      <description>

&lt;p&gt;About the people and the resources.&lt;/p&gt;

&lt;h4 id=&#34;uf-informatics-institute&#34;&gt;UF Informatics Institute&lt;/h4&gt;

&lt;h4 id=&#34;uf-libraries&#34;&gt;UF Libraries&lt;/h4&gt;

&lt;h4 id=&#34;denis-valle-lab&#34;&gt;Denis Valle Lab&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Courses at UF</title>
      <link>/courses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/</guid>
      <description>

&lt;h4 id=&#34;workshops&#34;&gt;Workshops&lt;/h4&gt;

&lt;p&gt;The &lt;a href=&#34;https://software-carpentry.org/&#34;&gt;Software&lt;/a&gt; and &lt;a href=&#34;http://www.datacarpentry.org/&#34;&gt;Data Carpentry&lt;/a&gt; workshops are a great way to jump-start your R programming skills. Workshops are offered regularly across campus, check out the &lt;a href=&#34;https://informatics.institute.ufl.edu/&#34;&gt;UF Informatics Institute website&lt;/a&gt; for upcoming workshops.&lt;/p&gt;

&lt;p&gt;Also, all of the course materials are freely available at any time, so you can work through these lessons on your own. The &lt;a href=&#34;http://www.datacarpentry.org/R-ecology-lesson/&#34;&gt;Data Analysis and Visualization in R&lt;/a&gt; is a great place to start, and the &lt;a href=&#34;http://swcarpentry.github.io/r-novice-inflammation/&#34;&gt;Programming with R&lt;/a&gt; and &lt;a href=&#34;http://swcarpentry.github.io/r-novice-gapminder/&#34;&gt;R for Reproducible Scientific Analysis&lt;/a&gt; lessons provide more in-depth resources for mastering R.&lt;/p&gt;

&lt;h4 id=&#34;data-carpentry-course&#34;&gt;Data Carpentry Course&lt;/h4&gt;

&lt;p&gt;The Data Carpentry curriculum is also offered as a 3 credit course (WIS 6934) instructed by Dr. Ethan White. Here&amp;rsquo;s a link to the &lt;a href=&#34;http://www.datacarpentry.org/semester-biology/schedule/&#34;&gt;course website&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;stats-courses&#34;&gt;Stats Courses&lt;/h4&gt;

&lt;p&gt;Many department across UF have courses in statistics that use R (as well as other programs). &lt;a href=&#34;https://ufstatscourses.shinyapps.io/shiny_tutorial/&#34;&gt;Check out this site&lt;/a&gt; to see all the stats courses across campus, and which ones use R.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Schedule</title>
      <link>/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/schedule/</guid>
      <description>&lt;iframe src=&#34;https://calendar.google.com/calendar/embed?src=ufrmeetup%40gmail.com&amp;ctz=America/New_York&#34; style=&#34;border: 0&#34; width=&#34;800&#34; height=&#34;600&#34; frameborder=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Starter&#39;s Guide</title>
      <link>/start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/start/</guid>
      <description>

&lt;h4 id=&#34;installing-r-and-rstudio&#34;&gt;Installing R and RStudio&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The first step is to &lt;a href=&#34;https://www.r-project.org/&#34;&gt;install R&lt;/a&gt;, just select the correct link for your operating system&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Next, we &lt;strong&gt;highly recommend&lt;/strong&gt; &lt;a href=&#34;https://www.rstudio.com/&#34;&gt;installing RStudio&lt;/a&gt;. This is an &amp;ldquo;integrated development environment&amp;rdquo; (IDE), which provides a useful interface from programming in R. It&amp;rsquo;s not essential, but it will make your life easier (especially for beginnings), and it&amp;rsquo;s free!&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You&amp;rsquo;re ready to start programming in R! Now you can sign up for the &lt;a href=&#34;../listserv&#34;&gt;UF R list-serv&lt;/a&gt;, take a look at the &lt;a href=&#34;../schedule&#34;&gt;schedule&lt;/a&gt; for activities on campus, and check out the R-related &lt;a href=&#34;../courses&#34;&gt;courses and workshops at UF&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you get stuck, attending the &lt;a href=&#34;../meetups&#34;&gt;weekly meetups&lt;/a&gt; is a great place to get one-on-one help!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>UF R List-Serv</title>
      <link>/listserv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/listserv/</guid>
      <description>&lt;p&gt;We have resurrected the UF R list-serv to provide a forum for asking questions in R. Please sign up for the &lt;a href=&#34;http://tinyurl.com/UFRUser&#34;&gt;list-serv here&lt;/a&gt;. If you want to manage how you recieve emails from the list, &lt;a href=&#34;https://lists.ufl.edu/cgi-bin/wa?INDEX&#34;&gt;follow this link&lt;/a&gt;. Sign in and change setting under the subscriber&amp;rsquo;s corner.  We strive to make the list beginner-friendly, however please check out &lt;a href=&#34;http://www.r-project.org/posting-guide.html&#34;&gt;this posting guide&lt;/a&gt; before posting (well-formmated questions can be answered much quicker!).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Weekly Meetups</title>
      <link>/meetups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/meetups/</guid>
      <description>&lt;p&gt;Our weekly meetups are on Wednesdays from 4-6pm at the Marstons Science Library (&lt;a href=&#34;https://www.google.com/maps/place/UF+Marston+Science+Library/@29.6480995,-82.3462533,17z/data=!3m1!4b1!4m5!3m4!1s0x88e8a39d475abd77:0xa84d77bf04354a1e!8m2!3d29.6480995!4d-82.3440646&#34;&gt;located here&lt;/a&gt;). The meetups consist of presentation/tutorial covering interesting topics in R, and are followed by an open session where you can consult advanced R users. Please be sure to sign up for the list-serv for updates on topics and changes to the schedule/locations.&lt;/p&gt;

&lt;p&gt;If you have suggestions for future presentations, or are interested in giving a presentation (even better!), please don&amp;rsquo;t hesitate to &lt;a href=&#34;mailto:jjmillar@ufl.edu%3Cmailto:jjmillar@ufl.edu&#34;&gt;send us an email&lt;/a&gt;. We&amp;rsquo;re also striving to create R markdown files for these presentations, which will be hosted on this site and on Github.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>